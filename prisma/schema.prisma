// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model Post {
  id        String   @id @default(cuid())
  username  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String @map("created_by_id")

  @@index([username])
  @@map("post")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  username String

  passwordHash String @map("password_hash")

  isEmailVerified    Int    @default(0) @map("is_email_verified") // Is the email verified
  isTwoFactorEnabled Int    @default(0) @map("is_two_factor_enabled") // Is two-factor authentication enabled
  totpKey            Bytes? @map("totp_key") // TOTP key for two-factor authentication
  recoveryCode       Bytes? @map("recovery_code") // Recovery code for two-factor authentication

  sessions      Session[]
  emailRequests EmailVerificationRequest[]
  resetSessions PasswordResetSession[]
  posts         Post[]

  @@index([username])
  @@map("user")
}

model Session {
  id        String   @id
  createdAt DateTime @default(now()) @map("created_at")

  userId              String @map("user_id")
  user                User   @relation(fields: [userId], references: [id])
  expiresAt           Int    @map("expires_at")
  isTwoFactorVerified Int    @default(0) @map("is_two_factor_verified")

  @@map("session")
}

model EmailVerificationRequest {
  id        String   @id
  createdAt DateTime @default(now()) @map("created_at")

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  email     String
  code      String
  expiresAt Int    @map("expires_at")

  @@map("email_verification_request")
}

model PasswordResetSession {
  id        String   @id
  createdAt DateTime @default(now()) @map("created_at")

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  email               String
  code                String
  expiresAt           Int    @map("expires_at")
  isEmailVerified     Int    @default(0) @map("is_email_verified")
  isTwoFactorVerified Int    @default(0) @map("is_two_factor_verified")

  @@map("password_reset_session")
}
